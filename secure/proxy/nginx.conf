# Nginx configuration for secure proxy
worker_processes auto;
error_log /dev/stderr warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting settings
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Server configuration
    server {
        listen 8080;
        server_name localhost;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        # Security settings
        client_body_timeout 10s;
        client_header_timeout 10s;
        client_max_body_size 1m;

        location / {
            proxy_pass http://secure-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Add for debugging
        location = /proxy-status {
            stub_status on;
            access_log off;
        }

        # Block Redis direct access
        location ~* /redis {
            deny all;
            return 403;
        }

        # Block access to sensitive files
        location ~* \.(conf|acl|key|crt)$ {
            deny all;
            return 403;
        }
    }
}