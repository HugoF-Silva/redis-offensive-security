version: '3.8'

networks:
  vulnerable_network:
    name: ${VULNERABLE_NETWORK}
  secure_network:
    name: ${SECURE_NETWORK}
  monitoring_network:
    name: ${MONITORING_NETWORK}
  
services:
  nginx-router:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-router.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - vulnerable_network
      - secure_network
      - monitoring_network
    depends_on:
      - vulnerable-backend
      - secure-proxy
      - grafana
    restart: unless-stopped

  vulnerable-redis:
    build:
      context: ./vulnerable/redis
    expose:
      - "6379"
    environment:
      - REDIS_PASSWORD=${PRE_VUL_REDIS_PASSWORD}
    volumes:
      - ./vulnerable/redis/data:/data
    networks:
      - vulnerable_network
    restart: unless-stopped

  vulnerable-redis-exporter:
    image: oliver006/redis_exporter:latest
    expose:
      - "9121"
    environment:
      - REDIS_ADDR=vulnerable-redis:6379
      - REDIS_PASSWORD=${PRE_VUL_REDIS_PASSWORD}
      - REDIS_EXPORTER_LOG_FORMAT=txt
    depends_on:
      - vulnerable-redis
    networks:
      - vulnerable_network
      - monitoring_network
    restart: unless-stopped

  vulnerable-backend:
    build:
      context: ./vulnerable/backend
    expose:
      - "8000"
    depends_on:
      - vulnerable-redis
    environment:
      - REDIS_HOST=vulnerable-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${PRE_VUL_REDIS_PASSWORD}
    networks:
      - vulnerable_network
    restart: unless-stopped
  
  secure-redis:
    build:
      context: ./secure/redis
    environment:
      - REDIS_PASSWORD=${PRE_SEC_REDIS_PASSWORD}
    volumes:
      - ./secure/redis/data:/data
      - redis_certs:/etc/ssl
    networks:
      - secure_network
    restart: unless-stopped
    cap_add:
      - SYS_RESOURCE
      - NET_ADMIN
    security_opt:
      - apparmor=unconfined
  
  secure-redis-exporter:
    image: oliver006/redis_exporter:latest
    expose:
      - "9121"
    environment:
      - REDIS_ADDR=secure-redis:6379
      - REDIS_PASSWORD=${PRE_SEC_REDIS_PASSWORD}
      - REDIS_EXPORTER_LOG_FORMAT=txt
    depends_on:
      - secure-redis
    networks:
      - secure_network
      - monitoring_network
    restart: unless-stopped

  secure-backend:
    build:
      context: ./secure/backend
    environment:
      - REDIS_HOST=secure-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${PRE_SEC_REDIS_PASSWORD}
      - REDIS_TLS_ENABLED=true
      - REDIS_TLS_CERT_PATH=${TLS_CERT_PATH}
      - REDIS_TLS_KEY_PATH=${TLS_KEY_PATH}
      - REDIS_TLS_CA_CERT_PATH=${TLS_CA_CERT_PATH}
    depends_on:
      - secure-redis
    networks:
      - secure_network
    restart: unless-stopped
  
  secure-proxy:
    build:
      context: ./secure/proxy
    expose:
      - "8080"
    depends_on:
      - secure-backend
    networks:
      - secure_network
    restart: unless-stopped
  
  prometheus:
    image: prom/prometheus:latest
    expose: 
      - "9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - vulnerable_network
      - secure_network
      - monitoring_network
    restart: unless-stopped
  
  grafana:
    image: grafana/grafana:latest
    expose:
      - "3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - monitoring_network
    restart: unless-stopped

volumes:
  redis_certs:
    name: redis_certs